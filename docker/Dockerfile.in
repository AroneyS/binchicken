FROM mambaorg/micromamba:1.5.6

# This dockerfile uses cached mounts, so to build use e.g.
# $ DOCKER_BUILDKIT=1 docker build .

ARG NEW_MAMBA_USER=root
ARG NEW_MAMBA_USER_ID=0
ARG NEW_MAMBA_USER_GID=0
ENV MAMBA_USER=$NEW_MAMBA_USER
ENV MAMBA_ROOT_PREFIX="/opt/conda"
ENV MAMBA_EXE="/bin/micromamba"
USER $MAMBA_USER
WORKDIR /binchicken

# Install man-db. We cannot use conda because man-db doesn't appear to be
# available in any conda repo
RUN apt update && apt install -y man-db

ADD binchicken.yml /binchicken.yml
RUN --mount=type=cache,target=/opt/conda/pkgs micromamba install -c conda-forge -c bioconda -n base git -f /binchicken.yml
RUN --mount=type=cache,target=/opt/conda/pkgs micromamba clean --all --yes
# This is needed to activate the environment in the dockerfile
ARG MAMBA_DOCKERFILE_ACTIVATE=1

RUN git clone https://github.com/AroneyS/binchicken . && git checkout vBINCHICKEN_VERSION

RUN pip install -e .

# Remove extra files
RUN rm -rfv binchicken/.git binchicken/test

# Run binchicken build
RUN binchicken build \
    --conda-prefix /opt/conda/envs/ \
    --singlem-metapackage /binchicken/singlem_metapackage \
    --checkm2-db /binchicken/CheckM2_database \
    --download-databases
ENV SINGLEM_METAPACKAGE_PATH=/binchicken/singlem_metapackage
ENV CHECKM2DB=/binchicken/CheckM2_database

RUN find /binchicken/singlem_metapackage /binchicken/CheckM2_database -type d -print0 | xargs -0 chmod 755
RUN find /binchicken/singlem_metapackage /binchicken/CheckM2_database -type f -print0 | xargs -0 chmod +r
RUN rm -rf /binchicken/build /binchicken/genome_1.fna /binchicken/sample_*
RUN conda clean -af
RUN rm -rf /opt/conda/envs/*/pkgs

# Run some tests
RUN binchicken --version
RUN binchicken coassemble --full-help | head

# Remove ~/.mamba as it is just taking up space
# RUN rm -rf ~/.mamba

# Remove all the build dependencies / image layers for a smaller image overall
# FROM scratch
# COPY --from=0 / /

## The following is to add micromamba back into the image, from https://micromamba-docker.readthedocs.io/en/latest/advanced_usage.html#adding-micromamba-to-an-existing-docker-image

# # bring in the micromamba image so we can copy files from it
# FROM mambaorg/micromamba:1.5.6 as micromamba

# # This is the image we are going add micromaba to:
# FROM tomcat:9-jdk17-temurin-focal

# USER root

# if your image defaults to a non-root user, then you may want to make the
# next 3 ARG commands match the values in your image. You can get the values
# by running: docker run --rm -it my/image id -a
# ARG MAMBA_USER=mambauser
# ARG MAMBA_USER_ID=57439
# ARG MAMBA_USER_GID=57439
## Make the default user root because otherwise there are permission issues in google batch
# USER $MAMBA_USER
# ARG MAMBA_USER_ID=0
# ARG MAMBA_USER_GID=0
# ENV MAMBA_USER=$MAMBA_USER

# ## These below are not necessary because the copy from the micromamba image already has them, and doing it just adds to the the image size.
# COPY --from=micromamba "$MAMBA_EXE" "$MAMBA_EXE"
# COPY --from=micromamba /usr/local/bin/_activate_current_env.sh /usr/local/bin/_activate_current_env.sh
# COPY --from=micromamba /usr/local/bin/_dockerfile_shell.sh /usr/local/bin/_dockerfile_shell.sh
# COPY --from=micromamba /usr/local/bin/_entrypoint.sh /usr/local/bin/_entrypoint.sh
# COPY --from=micromamba /usr/local/bin/_dockerfile_initialize_user_accounts.sh /usr/local/bin/_dockerfile_initialize_user_accounts.sh
# COPY --from=micromamba /usr/local/bin/_dockerfile_setup_root_prefix.sh /usr/local/bin/_dockerfile_setup_root_prefix.sh

# RUN /usr/local/bin/_dockerfile_initialize_user_accounts.sh && \
#     /usr/local/bin/_dockerfile_setup_root_prefix.sh


SHELL ["/usr/local/bin/_dockerfile_shell.sh"]

WORKDIR /data
ENTRYPOINT ["/usr/local/bin/_entrypoint.sh","binchicken"]
